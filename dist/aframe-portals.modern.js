AFRAME.registerComponent("portal",{schema:{destination:{default:""},width:{default:2},height:{default:3},maxRecursion:{default:2},teleportCooldown:{default:100},enableTeleport:{default:!0}},init:function(){const e=this.el,t=e.sceneEl,o=this.data;e.justTeleported=!1,e.isCameraColliding=!1;const n=new THREE.BoxBufferGeometry(o.width,o.height,1e-4),r=new THREE.MeshBasicMaterial,a=new THREE.Mesh(n,r);if(a.name="portal-surface",e.object3D.add(a),t.addEventListener("portal-teleported",()=>{e.justTeleported=!0}),e.addEventListener("camera-collision-start",function(){if(0==o.enableTeleport)return;if(!0===e.justTeleported)return;e.justTeleported=!0,t.emit("portal-teleported");const n=t.camera,r=n.el,a=document.querySelector(o.destination).object3D,i=e.object3D.rotation,l=a.rotation,c=new THREE.Euler(i.x-l.x,i.y-l.y+Math.PI,i.z-l.z);r.components["look-controls"]&&(r.components["look-controls"].yawObject.rotation.y-=c.y);const s=e.object3D.getWorldDirection(new THREE.Vector3).multiplyScalar(.075),d=n.getWorldPosition(new THREE.Vector3),E=e.object3D.getWorldPosition(new THREE.Vector3),m=(new THREE.Vector3).subVectors(d,E).sub(s),p=m.clone(),u=c.y;p.x=m.x*Math.cos(u)-m.z*Math.sin(u),p.z=m.x*Math.sin(u)+m.z*Math.cos(u);const T=a.position.clone().add(p);r.object3D.position.x=T.x,r.object3D.position.y=T.y,r.object3D.position.z=T.z}),t.portals||(t.portals=[],t.portalPairs=[]),!1===Array.from(t.children).reduce((e,t)=>e||t.hasAttribute("portal-manager"),!1)){const e=document.createElement("a-entity");e.setAttribute("portal-manager",{maxRecursion:o.maxRecursion}),t.appendChild(e)}const i=t.portalPairs;t.portals.push(e.object3D);const l=document.querySelector(o.destination);if(l){let t=!1;i.forEach(o=>{o.forEach(o=>{o==e.object3D&&(t=!0)})}),0==t&&i.push([e.object3D,l.object3D])}},tick:function(){const e=this.el;!0===e.justTeleported&&setTimeout(()=>{e.justTeleported=!1},this.data.teleportCooldown)}}),AFRAME.registerComponent("portal-manager",{schema:{maxRecursion:{default:2}},init:function(){},tick:function(){const e=this.el.sceneEl,t=e.portals,o=e.camera.getWorldPosition(new THREE.Vector3),n=t.map(e=>({portal:e,distance:e.getWorldPosition(new THREE.Vector3).distanceTo(o)})).sort((e,t)=>t.distance-e.distance);e.portals=n.map(e=>e.portal)},tock:function(){const e=this.el.sceneEl;this.renderRecursivePortals(e.renderer,e.camera,0),this.collisionDetection()},renderRecursivePortals:function(e,t,o){const n=this.el.sceneEl,r=n.portals,a=e.getContext();e.autoClear=!1,t.matrixAutoUpdate=!1,r.forEach(i=>{const l=document.querySelector(i.el.components.portal.data.destination).object3D;a.colorMask(!1,!1,!1,!1),a.depthMask(!1),a.disable(a.DEPTH_TEST),a.enable(a.STENCIL_TEST),a.stencilFunc(a.NOTEQUAL,o,255),a.stencilOp(a.INCR,a.KEEP,a.KEEP),a.stencilMask(255),e.render(i,t);const c=(new THREE.PerspectiveCamera).copy(t);if(c.matrixWorld=function(e,t,o){const n=e.matrixWorld.clone();n.invert().multiply(t.matrixWorld);const r=o.matrixWorld.clone().invert(),a=(new THREE.Matrix4).makeRotationY(Math.PI);return(new THREE.Matrix4).multiply(n).multiply(a).multiply(r).invert()}(t,i,l),c.projectionMatrix=function(e,t,o){const n=t.clone().invert(),r=(new THREE.Matrix4).extractRotation(e.matrixWorld),a=(new THREE.Vector3).set(0,0,1).applyMatrix4(r),i=new THREE.Plane;i.setFromNormalAndCoplanarPoint(a,e.getWorldPosition(new THREE.Vector3)),i.applyMatrix4(n);const l=new THREE.Vector4;l.set(i.normal.x,i.normal.y,i.normal.z,i.constant);const c=o.clone(),s=new THREE.Vector4;return s.x=(Math.sign(l.x)+c.elements[8])/c.elements[0],s.y=(Math.sign(l.y)+c.elements[9])/c.elements[5],s.z=-1,s.w=(1+c.elements[10])/o.elements[14],l.multiplyScalar(2/l.dot(s)),c.elements[2]=l.x,c.elements[6]=l.y,c.elements[10]=l.z+1,c.elements[14]=l.w,c}(l,c.matrixWorld,c.projectionMatrix),o==this.data.maxRecursion){a.colorMask(!0,!0,!0,!0),a.depthMask(!0),e.clear(!1,!0,!1),a.enable(a.DEPTH_TEST),a.enable(a.STENCIL_TEST),a.stencilMask(0),a.stencilFunc(a.EQUAL,o+1,255),(new THREE.Scene).children=n.object3D.children.filter(e=>!r.includes(e));const t=new THREE.Scene;t.children=n.object3D.children,e.render(t,c)}else this.renderRecursivePortals(e,c,o+1);a.colorMask(!1,!1,!1,!1),a.depthMask(!1),a.enable(a.STENCIL_TEST),a.stencilMask(255),a.stencilFunc(a.NOTEQUAL,o+1,255),a.stencilOp(a.DECR,a.KEEP,a.KEEP),e.render(i,t)}),a.disable(a.STENCIL_TEST),a.stencilMask(0),a.colorMask(!1,!1,!1,!1),a.enable(a.DEPTH_TEST),a.depthMask(!0),a.depthFunc(a.ALWAYS),e.clear(!1,!0,!1),r.forEach(o=>{e.render(o,t)}),a.depthFunc(a.LESS),a.enable(a.STENCIL_TEST),a.stencilMask(0),a.stencilFunc(a.LEQUAL,o,255),a.colorMask(!0,!0,!0,!0),a.depthMask(!0);const i=new THREE.Scene;i.children=n.object3D.children.filter(e=>!r.includes(e)),e.render(i,t),t.matrixAutoUpdate=!0},collisionDetection:function(){const e=this.el.sceneEl,t=e.camera,o=e.portals.map(e=>{const t=e.children.filter(e=>"portal-surface"==e.name)[0],o=(new THREE.Box3).setFromObject(t);return{portal:e,xMin:o.min.x,xMax:o.max.x,yMin:o.min.y,yMax:o.max.y,zMin:o.min.z,zMax:o.max.z}}),n=t.getWorldPosition(new THREE.Vector3),r=n.x-.05,a=n.x+.05,i=n.y-.05,l=n.y+.05,c=n.z-.05,s=n.z+.05;o.forEach(e=>{if(r<=e.xMax&&a>=e.xMin&&i<=e.yMax&&l>=e.yMin&&c<=e.zMax&&s>=e.zMin){const t=e.portal.el;!1===t.isCameraColliding&&(t.emit("camera-collision-start"),t.isCameraColliding=!0)}else{const t=e.portal.el;!0===t.isCameraColliding&&(t.emit("camera-collision-end"),t.isCameraColliding=!1)}})}});
//# sourceMappingURL=aframe-portals.modern.js.map
