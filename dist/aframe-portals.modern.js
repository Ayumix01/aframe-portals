AFRAME.registerComponent("portal",{schema:{destSelector:{default:""},width:{default:2},height:{default:3},maxRecursion:{default:2}},init:function(){const e=this.el,t=e.sceneEl,n=this.data;e.justTeleported=!1;const o=new THREE.BoxBufferGeometry(n.width,n.height,.01),r=new THREE.MeshBasicMaterial({colorWrite:!1}),c=new THREE.Mesh(o,r);if(c.geometry.computeBoundingSphere(),c.frustumCulled=!0,c.matrixAutoUpdate=!1,c.renderOrder=2,c.visible=!0,c.name="portal-surface",e.object3D.add(c),t.addEventListener("portal-teleported",()=>{e.justTeleported=!0}),e.addEventListener("camera-collision",function(){if(!0===e.justTeleported)return;e.justTeleported=!0,t.emit("portal-teleported");const o=t.camera,r=o.el,c=document.querySelector(n.destSelector).object3D,l=e.object3D.rotation,i=c.rotation,a=new THREE.Euler(l.x-i.x,l.y-i.y,l.z-i.z);r.components["look-controls"]&&(r.components["look-controls"].yawObject.rotation.y+=a.y);const s=new THREE.Vector3;s.subVectors(o.getWorldPosition(new THREE.Vector3),e.object3D.getWorldPosition(new THREE.Vector3));const E=c.position.clone().add(s);o.el.object3D.position.x=E.x,o.el.object3D.position.y=E.y,o.el.object3D.position.z=E.z}),t.portals||(t.portals=[],t.portalPairs=[]),!1===Array.from(t.children).reduce((e,t)=>e||t.hasAttribute("portal-renderer"),!1)){const e=document.createElement("a-entity");e.setAttribute("portal-renderer",{maxRecursion:n.maxRecursion}),t.appendChild(e)}const l=t.portalPairs;t.portals.push(e.object3D);const i=document.querySelector(n.destSelector);if(i){let t=!1;l.forEach(n=>{n.forEach(n=>{n==e.object3D&&(t=!0)})}),0==t&&l.push([e.object3D,i.object3D])}},tick:function(){const e=this.el;!0===e.justTeleported&&setTimeout(()=>{e.justTeleported=!1},100)}}),AFRAME.registerComponent("portal-renderer",{schema:{maxRecursion:{default:2}},init:function(){},tick:function(){const e=this.el.sceneEl,t=e.camera,n=e.portals.map(e=>{const t=e.children.filter(e=>"portal-surface"==e.name)[0],n=(new THREE.Box3).setFromObject(t);return{portal:e,xMin:n.min.x,xMax:n.max.x,yMin:n.min.y,yMax:n.max.y,zMin:n.min.z,zMax:n.max.z}}),o=t.getWorldPosition(new THREE.Vector3),r=o.x-.05,c=o.x+.05,l=o.y-.05,i=o.y+.05,a=o.z-.05,s=o.z+.05;n.forEach(e=>{r<=e.xMax&&c>=e.xMin&&l<=e.yMax&&i>=e.yMin&&a<=e.zMax&&s>=e.zMin&&(console.log("collision!"),e.portal.el.emit("camera-collision"))})},tock:function(){this.renderRecursivePortals(this.el.sceneEl.renderer,this.el.sceneEl.camera,0)},renderRecursivePortals:function(e,t,n){const o=this.el.sceneEl,r=o.portals,c=o.portalPairs,l=e.getContext();e.autoClear=!1,t.matrixAutoUpdate=!1,c.forEach(c=>{c.forEach((i,a)=>{const s=c[1-a],E=new THREE.Scene;E.children=i.children,l.colorMask(!1,!1,!1,!1),l.depthMask(!1),l.disable(l.DEPTH_TEST),l.enable(l.STENCIL_TEST),l.stencilFunc(l.NOTEQUAL,n,255),l.stencilOp(l.INCR,l.KEEP,l.KEEP),l.stencilMask(255),e.render(E,t);const d=(new THREE.PerspectiveCamera).copy(t);if(d.matrixWorld=function(e,t,n){const o=e.matrixWorld.clone();o.invert().multiply(t.matrixWorld);const r=n.matrixWorld.clone().invert(),c=(new THREE.Matrix4).makeRotationY(Math.PI);return(new THREE.Matrix4).multiply(o).multiply(c).multiply(r).invert()}(t,i,s),d.projectionMatrix=function(e,t,n){const o=t.clone().invert(),r=(new THREE.Matrix4).extractRotation(e.matrixWorld),c=(new THREE.Vector3).set(0,0,1).applyMatrix4(r),l=new THREE.Plane;l.setFromNormalAndCoplanarPoint(c,e.getWorldPosition(new THREE.Vector3)),l.applyMatrix4(o);const i=new THREE.Vector4;i.set(l.normal.x,l.normal.y,l.normal.z,l.constant);const a=n.clone(),s=new THREE.Vector4;return s.x=(Math.sign(i.x)+a.elements[8])/a.elements[0],s.y=(Math.sign(i.y)+a.elements[9])/a.elements[5],s.z=-1,s.w=(1+a.elements[10])/n.elements[14],i.multiplyScalar(2/i.dot(s)),a.elements[2]=i.x,a.elements[6]=i.y,a.elements[10]=i.z+1,a.elements[14]=i.w,a}(s,d.matrixWorld,d.projectionMatrix),n==this.data.maxRecursion){l.colorMask(!0,!0,!0,!0),l.depthMask(!0),e.clear(!1,!0,!1),l.enable(l.DEPTH_TEST),l.enable(l.STENCIL_TEST),l.stencilMask(0),l.stencilFunc(l.EQUAL,n+1,255),(new THREE.Scene).children=o.object3D.children.filter(e=>!r.includes(e));const t=new THREE.Scene;t.children=o.object3D.children,e.render(t,d)}else this.renderRecursivePortals(e,d,n+1);l.colorMask(!1,!1,!1,!1),l.depthMask(!1),l.enable(l.STENCIL_TEST),l.stencilMask(255),l.stencilFunc(l.NOTEQUAL,n+1,255),l.stencilOp(l.DECR,l.KEEP,l.KEEP),e.render(E,t)})}),l.disable(l.STENCIL_TEST),l.stencilMask(0),l.colorMask(!1,!1,!1,!1),l.enable(l.DEPTH_TEST),l.depthMask(!0),l.depthFunc(l.ALWAYS),e.clear(!1,!0,!1),r.forEach(n=>{const o=new THREE.Scene;o.children=n.children,e.render(o,t)}),l.depthFunc(l.LESS),l.enable(l.STENCIL_TEST),l.stencilMask(0),l.stencilFunc(l.LEQUAL,n,255),l.colorMask(!0,!0,!0,!0),l.depthMask(!0),(new THREE.Scene).children=o.object3D.children;const i=new THREE.Scene;i.children=o.object3D.children,e.render(i,t),t.matrixAutoUpdate=!0}});
//# sourceMappingURL=aframe-portals.modern.js.map
