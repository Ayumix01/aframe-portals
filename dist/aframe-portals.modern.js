!function(e){function t(n){if(s[n])return s[n].exports;var i=s[n]={exports:{},id:n,loaded:!1};return e[n].call(i.exports,i,i.exports,t),i.loaded=!0,i.exports}var s={};t.m=e,t.c=s,t.p="",t(0)}([function(e,t){if("undefined"==typeof AFRAME)throw new Error("Component attempted to register before AFRAME was available.");var s={childList:!0,attributes:!0,subtree:!0};AFRAME.registerComponent("aabb-collider",{schema:{collideNonVisible:{default:!1},debug:{default:!1},enabled:{default:!0},interval:{default:80},objects:{default:""}},init:function(){this.centerDifferenceVec3=new THREE.Vector3,this.clearedIntersectedEls=[],this.closestIntersectedEl=null,this.boundingBox=new THREE.Box3,this.boxCenter=new THREE.Vector3,this.boxHelper=new THREE.BoxHelper,this.boxMax=new THREE.Vector3,this.boxMin=new THREE.Vector3,this.hitClosestClearEventDetail={},this.hitClosestEventDetail={},this.intersectedEls=[],this.objectEls=[],this.newIntersectedEls=[],this.prevCheckTime=void 0,this.previousIntersectedEls=[],this.setDirty=this.setDirty.bind(this),this.observer=new MutationObserver(this.setDirty),this.dirty=!0,this.hitStartEventDetail={intersectedEls:this.newIntersectedEls}},play:function(){this.observer.observe(this.el.sceneEl,s),this.el.sceneEl.addEventListener("object3dset",this.setDirty),this.el.sceneEl.addEventListener("object3dremove",this.setDirty)},remove:function(){this.observer.disconnect(),this.el.sceneEl.removeEventListener("object3dset",this.setDirty),this.el.sceneEl.removeEventListener("object3dremove",this.setDirty)},tick:function(e){var t,s,n,i,o=this.boundingBox,r=this.centerDifferenceVec3,l=this.clearedIntersectedEls,c=this.intersectedEls,a=this.el,h=this.newIntersectedEls,d=this.objectEls,E=this.prevCheckTime,b=this.previousIntersectedEls;if(this.data.enabled&&!(E&&e-E<this.data.interval)){for(this.prevCheckTime=e,this.dirty&&this.refreshObjects(),o.setFromObject(a.object3D),this.boxMin.copy(o.min),this.boxMax.copy(o.max),o.getCenter(this.boxCenter),this.data.debug&&(this.boxHelper.setFromObject(a.object3D),this.boxHelper.parent||a.sceneEl.object3D.add(this.boxHelper)),function(e,t){var s;for(e.length=0,s=0;s<t.length;s++)e[s]=t[s]}(b,c),c.length=0,i=0;i<d.length;i++)d[i]!==this.el&&(this.data.collideNonVisible||d[i].getAttribute("visible")?this.isIntersecting(d[i])&&c.push(d[i]):this.data.debug&&(t=d[i].object3D.boxHelper)&&(a.sceneEl.object3D.remove(t),d[i].object3D.boxHelper=null));for(h.length=0,i=0;i<c.length;i++)-1===b.indexOf(c[i])&&h.push(c[i]);for(l.length=0,i=0;i<b.length;i++)-1===c.indexOf(b[i])&&(b[i].hasAttribute("aabb-collider")||b[i].emit("hitend"),l.push(b[i]));for(i=0;i<h.length;i++)h[i]!==this.el&&(h[i].hasAttribute("aabb-collider")||h[i].emit("hitstart"));for(i=0;i<c.length;i++)c[i]!==this.el&&(r.copy(c[i].object3D.boundingBoxCenter).sub(this.boxCenter),(void 0===s||r.length()<s)&&(s=r.length(),n=c[i]));!c.length&&this.closestIntersectedEl?(this.hitClosestClearEventDetail.el=this.closestIntersectedEl,this.closestIntersectedEl.emit("hitclosestclear"),this.closestIntersectedEl=null,a.emit("hitclosestclear",this.hitClosestClearEventDetail)):n!==this.closestIntersectedEl&&(this.closestIntersectedEl&&(this.hitClosestClearEventDetail.el=this.closestIntersectedEl,this.closestIntersectedEl.emit("hitclosestclear",this.hitClosestClearEventDetail)),n&&(n.emit("hitclosest"),this.closestIntersectedEl=n,this.hitClosestEventDetail.el=n,a.emit("hitclosest",this.hitClosestEventDetail))),l.length&&a.emit("hitend"),h.length&&a.emit("hitstart",this.hitStartEventDetail)}},isIntersecting:function(){var e=new THREE.Box3;return function(t){var s,n;return e.setFromObject(t.object3D),this.data.debug&&(t.object3D.boxHelper||(t.object3D.boxHelper=new THREE.BoxHelper(t.object3D,new THREE.Color(Math.random(),Math.random(),Math.random())),t.sceneEl.object3D.add(t.object3D.boxHelper)),t.object3D.boxHelper.setFromObject(t.object3D)),s=e.min,n=e.max,t.object3D.boundingBoxCenter=t.object3D.boundingBoxCenter||new THREE.Vector3,e.getCenter(t.object3D.boundingBoxCenter),this.boxMin.x<=n.x&&this.boxMax.x>=s.x&&this.boxMin.y<=n.y&&this.boxMax.y>=s.y&&this.boxMin.z<=n.z&&this.boxMax.z>=s.z}}(),setDirty:function(){this.dirty=!0},refreshObjects:function(){var e=this.data;this.objectEls=e.objects?this.el.sceneEl.querySelectorAll(e.objects):this.el.sceneEl.children,this.dirty=!1}})}]),AFRAME.registerComponent("portal",{schema:{destSelector:{default:""},width:{default:2},height:{default:3},maxRecursion:{default:2}},init:function(){const e=this.el,t=e.sceneEl,s=this.data;e.justTeleported=!1;const n=new THREE.BoxBufferGeometry(s.width,s.height,.01),i=new THREE.MeshBasicMaterial({colorWrite:!1}),o=new THREE.Mesh(n,i);if(o.geometry.computeBoundingSphere(),o.frustumCulled=!0,o.matrixAutoUpdate=!1,o.renderOrder=2,o.visible=!0,e.object3D.add(o),t.addEventListener("loaded",()=>{const s=t.camera.el;s.id||(s.id="web-portal-cam-tag"),e.setAttribute("aabb-collider",{objects:`#${s.id}`})}),t.addEventListener("portal-teleported",()=>{e.justTeleported=!0}),e.addEventListener("hitstart",function(){if(!0===e.justTeleported)return;t.emit("portal-teleported");const n=t.camera,i=n.el,o=document.querySelector(s.destSelector).object3D,r=e.object3D.rotation,l=o.rotation,c=new THREE.Euler(r.x-l.x,r.y-l.y,r.z-l.z);i.components["look-controls"]&&(i.components["look-controls"].yawObject.rotation.y+=c.y);const a=new THREE.Vector3;a.subVectors(n.getWorldPosition(new THREE.Vector3),e.object3D.getWorldPosition(new THREE.Vector3));const h=o.position.clone().add(a);n.el.object3D.position.x=h.x,n.el.object3D.position.y=h.y,n.el.object3D.position.z=h.z}),t.portals||(t.portals=[],t.portalPairs=[]),!1===Array.from(t.children).reduce((e,t)=>e||t.hasAttribute("portal-renderer"),!1)){const e=document.createElement("a-entity");e.setAttribute("portal-renderer",{maxRecursion:s.maxRecursion}),t.appendChild(e)}const r=t.portalPairs;t.portals.push(e.object3D);const l=document.querySelector(s.destSelector);if(l){let t=!1;r.forEach(s=>{s.forEach(s=>{s==e.object3D&&(t=!0)})}),0==t&&r.push([e.object3D,l.object3D])}},tick:function(){const e=this.el;!0===e.justTeleported&&setTimeout(()=>{e.justTeleported=!1},100)}}),AFRAME.registerComponent("portal-renderer",{schema:{maxRecursion:{default:2}},init:function(){},tock:function(){this.renderRecursivePortals(this.el.sceneEl.renderer,this.el.sceneEl.camera,0)},renderRecursivePortals:function(e,t,s){const n=this.el.sceneEl,i=n.portals,o=n.portalPairs,r=e.getContext();e.autoClear=!1,t.matrixAutoUpdate=!1,o.forEach(o=>{o.forEach((l,c)=>{const a=o[1-c],h=new THREE.Scene;h.children=l.children,r.colorMask(!1,!1,!1,!1),r.depthMask(!1),r.disable(r.DEPTH_TEST),r.enable(r.STENCIL_TEST),r.stencilFunc(r.NOTEQUAL,s,255),r.stencilOp(r.INCR,r.KEEP,r.KEEP),r.stencilMask(255),e.render(h,t);const d=(new THREE.PerspectiveCamera).copy(t);if(d.matrixWorld=function(e,t,s){const n=e.matrixWorld.clone();n.invert().multiply(t.matrixWorld);const i=s.matrixWorld.clone().invert(),o=(new THREE.Matrix4).makeRotationY(Math.PI);return(new THREE.Matrix4).multiply(n).multiply(o).multiply(i).invert()}(t,l,a),d.projectionMatrix=function(e,t,s){const n=t.clone().invert(),i=(new THREE.Matrix4).extractRotation(e.matrixWorld),o=(new THREE.Vector3).set(0,0,1).applyMatrix4(i),r=new THREE.Plane;r.setFromNormalAndCoplanarPoint(o,e.getWorldPosition(new THREE.Vector3)),r.applyMatrix4(n);const l=new THREE.Vector4;l.set(r.normal.x,r.normal.y,r.normal.z,r.constant);const c=s.clone(),a=new THREE.Vector4;return a.x=(Math.sign(l.x)+c.elements[8])/c.elements[0],a.y=(Math.sign(l.y)+c.elements[9])/c.elements[5],a.z=-1,a.w=(1+c.elements[10])/s.elements[14],l.multiplyScalar(2/l.dot(a)),c.elements[2]=l.x,c.elements[6]=l.y,c.elements[10]=l.z+1,c.elements[14]=l.w,c}(a,d.matrixWorld,d.projectionMatrix),s==this.data.maxRecursion){r.colorMask(!0,!0,!0,!0),r.depthMask(!0),e.clear(!1,!0,!1),r.enable(r.DEPTH_TEST),r.enable(r.STENCIL_TEST),r.stencilMask(0),r.stencilFunc(r.EQUAL,s+1,255),(new THREE.Scene).children=n.object3D.children.filter(e=>!i.includes(e));const t=new THREE.Scene;t.children=n.object3D.children,e.render(t,d)}else this.renderRecursivePortals(e,d,s+1);r.colorMask(!1,!1,!1,!1),r.depthMask(!1),r.enable(r.STENCIL_TEST),r.stencilMask(255),r.stencilFunc(r.NOTEQUAL,s+1,255),r.stencilOp(r.DECR,r.KEEP,r.KEEP),e.render(h,t)})}),r.disable(r.STENCIL_TEST),r.stencilMask(0),r.colorMask(!1,!1,!1,!1),r.enable(r.DEPTH_TEST),r.depthMask(!0),r.depthFunc(r.ALWAYS),e.clear(!1,!0,!1),i.forEach(s=>{const n=new THREE.Scene;n.children=s.children,e.render(n,t)}),r.depthFunc(r.LESS),r.enable(r.STENCIL_TEST),r.stencilMask(0),r.stencilFunc(r.LEQUAL,s,255),r.colorMask(!0,!0,!0,!0),r.depthMask(!0),(new THREE.Scene).children=n.object3D.children;const l=new THREE.Scene;l.children=n.object3D.children,e.render(l,t),t.matrixAutoUpdate=!0}});
//# sourceMappingURL=aframe-portals.modern.js.map
