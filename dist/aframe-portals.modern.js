AFRAME.registerComponent("portal",{schema:{destination:{default:""},width:{default:2},height:{default:3},maxRecursion:{default:2},teleportCooldown:{default:100},enableTeleport:{default:!0}},init:function(){const e=this.el,t=e.sceneEl,n=this.data;e.justTeleported=!1,e.isCameraColliding=!1;const o=new THREE.BoxBufferGeometry(n.width,n.height,.01),r=new THREE.MeshBasicMaterial({colorWrite:!1}),i=new THREE.Mesh(o,r);if(i.geometry.computeBoundingSphere(),i.frustumCulled=!0,i.matrixAutoUpdate=!1,i.renderOrder=2,i.visible=!0,i.name="portal-surface",e.object3D.add(i),t.addEventListener("portal-teleported",()=>{e.justTeleported=!0}),e.addEventListener("camera-collision-start",function(){if(0==n.enableTeleport)return;if(!0===e.justTeleported)return;e.justTeleported=!0,t.emit("portal-teleported");const o=t.camera,r=o.el,i=document.querySelector(n.destination).object3D,a=e.object3D.rotation,l=i.rotation,c=new THREE.Euler(a.x-l.x,a.y-l.y+Math.PI,a.z-l.z);r.components["look-controls"]&&(r.components["look-controls"].yawObject.rotation.y-=c.y);const s=e.object3D.getWorldDirection(new THREE.Vector3).multiplyScalar(.075),E=(new THREE.Vector3).subVectors(o.getWorldPosition(new THREE.Vector3),e.object3D.getWorldPosition(new THREE.Vector3));E.sub(s);const d=new THREE.Vector3,m=c.y;d.x=E.x*Math.cos(m)-E.z*Math.sin(m),d.z=E.x*Math.sin(m)+E.z*Math.cos(m);const u=i.position.clone().add(d);r.object3D.position.x=u.x,r.object3D.position.y=u.y,r.object3D.position.z=u.z}),t.portals||(t.portals=[],t.portalPairs=[]),!1===Array.from(t.children).reduce((e,t)=>e||t.hasAttribute("portal-manager"),!1)){const e=document.createElement("a-entity");e.setAttribute("portal-manager",{maxRecursion:n.maxRecursion}),t.appendChild(e)}const a=t.portalPairs;t.portals.push(e.object3D);const l=document.querySelector(n.destination);if(l){let t=!1;a.forEach(n=>{n.forEach(n=>{n==e.object3D&&(t=!0)})}),0==t&&a.push([e.object3D,l.object3D])}},tick:function(){const e=this.el;!0===e.justTeleported&&setTimeout(()=>{e.justTeleported=!1},this.data.teleportCooldown)}}),AFRAME.registerComponent("portal-manager",{schema:{maxRecursion:{default:2}},init:function(){},tock:function(){this.renderRecursivePortals(this.el.sceneEl.renderer,this.el.sceneEl.camera,0),this.collisionDetection()},renderRecursivePortals:function(e,t,n){const o=this.el.sceneEl,r=o.portals,i=o.portalPairs,a=e.getContext();e.autoClear=!1,t.matrixAutoUpdate=!1,i.forEach(i=>{i.forEach((l,c)=>{const s=i[1-c],E=new THREE.Scene;E.children=l.children,a.colorMask(!1,!1,!1,!1),a.depthMask(!1),a.disable(a.DEPTH_TEST),a.enable(a.STENCIL_TEST),a.stencilFunc(a.NOTEQUAL,n,255),a.stencilOp(a.INCR,a.KEEP,a.KEEP),a.stencilMask(255),e.render(E,t);const d=(new THREE.PerspectiveCamera).copy(t);if(d.matrixWorld=function(e,t,n){const o=e.matrixWorld.clone();o.invert().multiply(t.matrixWorld);const r=n.matrixWorld.clone().invert(),i=(new THREE.Matrix4).makeRotationY(Math.PI);return(new THREE.Matrix4).multiply(o).multiply(i).multiply(r).invert()}(t,l,s),d.projectionMatrix=function(e,t,n){const o=t.clone().invert(),r=(new THREE.Matrix4).extractRotation(e.matrixWorld),i=(new THREE.Vector3).set(0,0,1).applyMatrix4(r),a=new THREE.Plane;a.setFromNormalAndCoplanarPoint(i,e.getWorldPosition(new THREE.Vector3)),a.applyMatrix4(o);const l=new THREE.Vector4;l.set(a.normal.x,a.normal.y,a.normal.z,a.constant);const c=n.clone(),s=new THREE.Vector4;return s.x=(Math.sign(l.x)+c.elements[8])/c.elements[0],s.y=(Math.sign(l.y)+c.elements[9])/c.elements[5],s.z=-1,s.w=(1+c.elements[10])/n.elements[14],l.multiplyScalar(2/l.dot(s)),c.elements[2]=l.x,c.elements[6]=l.y,c.elements[10]=l.z+1,c.elements[14]=l.w,c}(s,d.matrixWorld,d.projectionMatrix),n==this.data.maxRecursion){a.colorMask(!0,!0,!0,!0),a.depthMask(!0),e.clear(!1,!0,!1),a.enable(a.DEPTH_TEST),a.enable(a.STENCIL_TEST),a.stencilMask(0),a.stencilFunc(a.EQUAL,n+1,255),(new THREE.Scene).children=o.object3D.children.filter(e=>!r.includes(e));const t=new THREE.Scene;t.children=o.object3D.children,e.render(t,d)}else this.renderRecursivePortals(e,d,n+1);a.colorMask(!1,!1,!1,!1),a.depthMask(!1),a.enable(a.STENCIL_TEST),a.stencilMask(255),a.stencilFunc(a.NOTEQUAL,n+1,255),a.stencilOp(a.DECR,a.KEEP,a.KEEP),e.render(E,t)})}),a.disable(a.STENCIL_TEST),a.stencilMask(0),a.colorMask(!1,!1,!1,!1),a.enable(a.DEPTH_TEST),a.depthMask(!0),a.depthFunc(a.ALWAYS),e.clear(!1,!0,!1),r.forEach(n=>{const o=new THREE.Scene;o.children=n.children,e.render(o,t)}),a.depthFunc(a.LESS),a.enable(a.STENCIL_TEST),a.stencilMask(0),a.stencilFunc(a.LEQUAL,n,255),a.colorMask(!0,!0,!0,!0),a.depthMask(!0),(new THREE.Scene).children=o.object3D.children;const l=new THREE.Scene;l.children=o.object3D.children,e.render(l,t),t.matrixAutoUpdate=!0},collisionDetection:function(){const e=this.el.sceneEl,t=e.camera,n=e.portals.map(e=>{const t=e.children.filter(e=>"portal-surface"==e.name)[0],n=(new THREE.Box3).setFromObject(t);return{portal:e,xMin:n.min.x,xMax:n.max.x,yMin:n.min.y,yMax:n.max.y,zMin:n.min.z,zMax:n.max.z}}),o=t.getWorldPosition(new THREE.Vector3),r=o.x-.05,i=o.x+.05,a=o.y-.05,l=o.y+.05,c=o.z-.05,s=o.z+.05;n.forEach(e=>{if(r<=e.xMax&&i>=e.xMin&&a<=e.yMax&&l>=e.yMin&&c<=e.zMax&&s>=e.zMin){const t=e.portal.el;!1===t.isCameraColliding&&(t.emit("camera-collision-start"),t.isCameraColliding=!0)}else{const t=e.portal.el;!0===t.isCameraColliding&&(t.emit("camera-collision-end"),t.isCameraColliding=!1)}})}});
//# sourceMappingURL=aframe-portals.modern.js.map
