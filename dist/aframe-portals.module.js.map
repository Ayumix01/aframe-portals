{"version":3,"file":"aframe-portals.module.js","sources":["../src/lib/aframe-aabb-collider-component.min.js","../src/portal.js"],"sourcesContent":["!function(e){function t(i){if(s[i])return s[i].exports;var n=s[i]={exports:{},id:i,loaded:!1};return e[i].call(n.exports,n,n.exports,t),n.loaded=!0,n.exports}var s={};return t.m=e,t.c=s,t.p=\"\",t(0)}([function(e,t){function s(e,t){var s;for(e.length=0,s=0;s<t.length;s++)e[s]=t[s]}if(\"undefined\"==typeof AFRAME)throw new Error(\"Component attempted to register before AFRAME was available.\");var i={childList:!0,attributes:!0,subtree:!0};AFRAME.registerComponent(\"aabb-collider\",{schema:{collideNonVisible:{default:!1},debug:{default:!1},enabled:{default:!0},interval:{default:80},objects:{default:\"\"}},init:function(){this.centerDifferenceVec3=new THREE.Vector3,this.clearedIntersectedEls=[],this.closestIntersectedEl=null,this.boundingBox=new THREE.Box3,this.boxCenter=new THREE.Vector3,this.boxHelper=new THREE.BoxHelper,this.boxMax=new THREE.Vector3,this.boxMin=new THREE.Vector3,this.hitClosestClearEventDetail={},this.hitClosestEventDetail={},this.intersectedEls=[],this.objectEls=[],this.newIntersectedEls=[],this.prevCheckTime=void 0,this.previousIntersectedEls=[],this.setDirty=this.setDirty.bind(this),this.observer=new MutationObserver(this.setDirty),this.dirty=!0,this.hitStartEventDetail={intersectedEls:this.newIntersectedEls}},play:function(){this.observer.observe(this.el.sceneEl,i),this.el.sceneEl.addEventListener(\"object3dset\",this.setDirty),this.el.sceneEl.addEventListener(\"object3dremove\",this.setDirty)},remove:function(){this.observer.disconnect(),this.el.sceneEl.removeEventListener(\"object3dset\",this.setDirty),this.el.sceneEl.removeEventListener(\"object3dremove\",this.setDirty)},tick:function(e){var t,i,n,r,o=this.boundingBox,l=this.centerDifferenceVec3,h=this.clearedIntersectedEls,c=this.intersectedEls,a=this.el,b=this.newIntersectedEls,d=this.objectEls,E=this.prevCheckTime,x=this.previousIntersectedEls;if(this.data.enabled&&!(E&&e-E<this.data.interval)){for(this.prevCheckTime=e,this.dirty&&this.refreshObjects(),o.setFromObject(a.object3D),this.boxMin.copy(o.min),this.boxMax.copy(o.max),o.getCenter(this.boxCenter),this.data.debug&&(this.boxHelper.setFromObject(a.object3D),this.boxHelper.parent||a.sceneEl.object3D.add(this.boxHelper)),s(x,c),c.length=0,r=0;r<d.length;r++)d[r]!==this.el&&(this.data.collideNonVisible||d[r].getAttribute(\"visible\")?this.isIntersecting(d[r])&&c.push(d[r]):this.data.debug&&(t=d[r].object3D.boxHelper,t&&(a.sceneEl.object3D.remove(t),d[r].object3D.boxHelper=null)));for(b.length=0,r=0;r<c.length;r++)x.indexOf(c[r])===-1&&b.push(c[r]);for(h.length=0,r=0;r<x.length;r++)c.indexOf(x[r])===-1&&(x[r].hasAttribute(\"aabb-collider\")||x[r].emit(\"hitend\"),h.push(x[r]));for(r=0;r<b.length;r++)b[r]!==this.el&&(b[r].hasAttribute(\"aabb-collider\")||b[r].emit(\"hitstart\"));for(r=0;r<c.length;r++)c[r]!==this.el&&(l.copy(c[r].object3D.boundingBoxCenter).sub(this.boxCenter),(void 0===i||l.length()<i)&&(i=l.length(),n=c[r]));!c.length&&this.closestIntersectedEl?(this.hitClosestClearEventDetail.el=this.closestIntersectedEl,this.closestIntersectedEl.emit(\"hitclosestclear\"),this.closestIntersectedEl=null,a.emit(\"hitclosestclear\",this.hitClosestClearEventDetail)):n!==this.closestIntersectedEl&&(this.closestIntersectedEl&&(this.hitClosestClearEventDetail.el=this.closestIntersectedEl,this.closestIntersectedEl.emit(\"hitclosestclear\",this.hitClosestClearEventDetail)),n&&(n.emit(\"hitclosest\"),this.closestIntersectedEl=n,this.hitClosestEventDetail.el=n,a.emit(\"hitclosest\",this.hitClosestEventDetail))),h.length&&a.emit(\"hitend\"),b.length&&a.emit(\"hitstart\",this.hitStartEventDetail)}},isIntersecting:function(){var e=new THREE.Box3;return function(t){var s,i;return e.setFromObject(t.object3D),this.data.debug&&(t.object3D.boxHelper||(t.object3D.boxHelper=new THREE.BoxHelper(t.object3D,new THREE.Color(Math.random(),Math.random(),Math.random())),t.sceneEl.object3D.add(t.object3D.boxHelper)),t.object3D.boxHelper.setFromObject(t.object3D)),s=e.min,i=e.max,t.object3D.boundingBoxCenter=t.object3D.boundingBoxCenter||new THREE.Vector3,e.getCenter(t.object3D.boundingBoxCenter),this.boxMin.x<=i.x&&this.boxMax.x>=s.x&&this.boxMin.y<=i.y&&this.boxMax.y>=s.y&&this.boxMin.z<=i.z&&this.boxMax.z>=s.z}}(),setDirty:function(){this.dirty=!0},refreshObjects:function(){var e=this.data;this.objectEls=e.objects?this.el.sceneEl.querySelectorAll(e.objects):this.el.sceneEl.children,this.dirty=!1}})}]);","import './lib/aframe-aabb-collider-component.min';\r\n\r\nAFRAME.registerComponent('portal', {\r\n  schema: {\r\n    destSelector: { default: '' }, //rename\r\n    width: { default: 2 },\r\n    height: { default: 3 },\r\n    maxRecursion: { default: 2 },\r\n  },\r\n\r\n  init: function () {\r\n    const el = this.el;\r\n    const sceneEl = el.sceneEl;\r\n    const data = this.data;\r\n\r\n    el.setAttribute('visible', false); //tell aframe not to render this\r\n\r\n    //portal mesh\r\n    const geometry = new THREE.BoxBufferGeometry(data.width, data.height, 0.01);\r\n    const material = new THREE.MeshBasicMaterial({\r\n      colorWrite: false,\r\n    });\r\n    const mesh = new THREE.Mesh(geometry, material);\r\n    mesh.geometry.computeBoundingSphere();\r\n    mesh.frustumCulled = true;\r\n    mesh.matrixAutoUpdate = false;\r\n    mesh.renderOrder = 2;\r\n    mesh.visible = true;\r\n\r\n    el.object3D.add(mesh);\r\n\r\n    sceneEl.addEventListener('loaded', () => {\r\n      const cameraEl = sceneEl.camera.el;\r\n      if (cameraEl.id) {\r\n        el.setAttribute('aabb-collider', { objects: `#${cameraEl.id}` });\r\n      } else {\r\n        cameraEl.id = 'web-portal-cam-tag';\r\n        el.setAttribute('aabb-collider', { objects: `#${cameraEl.id}` });\r\n      }\r\n    });\r\n\r\n    el.addEventListener('hitstart', function () {\r\n      //teleport the camera\r\n      //const destPortal = document.querySelector(data.destSelector);\r\n    });\r\n\r\n    if (!sceneEl.portals) {\r\n      //use sceneEl to store state\r\n      sceneEl.portals = [];\r\n      sceneEl.portalPairs = [];\r\n\r\n      //add portal rendering to the render loop\r\n      sceneEl.object3D.onAfterRender = (renderer, scene, camera) => {\r\n        this.renderRecursivePortals(renderer, camera);\r\n      };\r\n    }\r\n\r\n    const portals = sceneEl.portals;\r\n    const pairs = sceneEl.portalPairs;\r\n\r\n    portals.push(el.object3D);\r\n\r\n    const dest = document.querySelector(data.destSelector);\r\n    if (dest) {\r\n      let isInPairs = false;\r\n      pairs.forEach((pair) => {\r\n        pair.forEach((portal) => {\r\n          if (portal == el.object3D) {\r\n            isInPairs = true;\r\n          }\r\n        });\r\n      });\r\n\r\n      if (isInPairs == false) {\r\n        pairs.push([el.object3D, dest.object3D]);\r\n      }\r\n    }\r\n  },\r\n\r\n  tick: function () {},\r\n\r\n  /*\r\n  renderSinglePortal: function () {\r\n    const sceneEl = this.el.sceneEl;\r\n    const scene = sceneEl.object3D;\r\n    const renderer = sceneEl.renderer;\r\n    const camera = sceneEl.camera;\r\n\r\n    renderer.autoClear = false;\r\n    camera.matrixAutoUpdate = false;\r\n\r\n    const gl = renderer.getContext();\r\n\r\n    const portal = this.el.object3D;\r\n    const destPortal = document.querySelector(this.data.destSelector).object3D;\r\n\r\n    const tmpScene = new THREE.Scene();\r\n    tmpScene.children = scene.children;\r\n\r\n    const portalScene = new THREE.Scene();\r\n    portalScene.children = portal.children;\r\n\r\n    const virtualCam = new THREE.PerspectiveCamera().copy(camera);\r\n    virtualCam.matrixWorld = computeViewMatrix(camera, portal, destPortal);\r\n    //projection matrix for Oblique View Frustum Depth Projection and Clipping\r\n    virtualCam.projectionMatrix = computeProjectionMatrix(\r\n      destPortal,\r\n      virtualCam.matrixWorld,\r\n      virtualCam.projectionMatrix\r\n    );\r\n\r\n    gl.enable(gl.STENCIL_TEST);\r\n    gl.stencilOp(gl.KEEP, gl.KEEP, gl.REPLACE);\r\n    gl.stencilFunc(gl.NOTEQUAL, 1, 0xff);\r\n    gl.stencilMask(0xff);\r\n\r\n    renderer.render(portalScene, camera);\r\n\r\n    gl.stencilFunc(gl.EQUAL, 1, 0xff);\r\n    gl.stencilMask(0x00);\r\n\r\n    renderer.clearDepth();\r\n    renderer.render(tmpScene, virtualCam);\r\n\r\n    gl.stencilMask(0xff);\r\n    gl.disable(gl.STENCIL_TEST);\r\n\r\n    camera.matrixAutoUpdate = true;\r\n  },\r\n  */\r\n\r\n  renderRecursivePortals: function (renderer, camera, recursionLevel = 0) {\r\n    const sceneEl = this.el.sceneEl;\r\n    const portals = sceneEl.portals;\r\n    const pairs = sceneEl.portalPairs;\r\n\r\n    const gl = renderer.getContext();\r\n\r\n    renderer.autoClear = false;\r\n    camera.matrixAutoUpdate = false;\r\n\r\n    pairs.forEach((pair) => {\r\n      pair.forEach((portal, i) => {\r\n        const destPortal = pair[1 - i];\r\n\r\n        const portalScene = new THREE.Scene();\r\n        portalScene.children = portal.children;\r\n\r\n        gl.colorMask(false, false, false, false);\r\n        gl.depthMask(false);\r\n        gl.disable(gl.DEPTH_TEST);\r\n        gl.enable(gl.STENCIL_TEST);\r\n        gl.stencilFunc(gl.NOTEQUAL, recursionLevel, 0xff);\r\n        gl.stencilOp(gl.INCR, gl.KEEP, gl.KEEP);\r\n        gl.stencilMask(0xff);\r\n\r\n        //render portal into stencil buffer\r\n        renderer.render(portalScene, camera);\r\n\r\n        const virtualCam = new THREE.PerspectiveCamera().copy(camera);\r\n        virtualCam.matrixWorld = computeViewMatrix(camera, portal, destPortal);\r\n        //projection matrix for Oblique View Frustum Depth Projection and Clipping\r\n        virtualCam.projectionMatrix = computeProjectionMatrix(\r\n          destPortal,\r\n          virtualCam.matrixWorld,\r\n          virtualCam.projectionMatrix\r\n        );\r\n\r\n        if (recursionLevel == this.data.maxRecursion) {\r\n          gl.colorMask(true, true, true, true);\r\n          gl.depthMask(true);\r\n          renderer.clear(false, true, false);\r\n          gl.enable(gl.DEPTH_TEST);\r\n          gl.enable(gl.STENCIL_TEST);\r\n          gl.stencilMask(0x00);\r\n          gl.stencilFunc(gl.EQUAL, recursionLevel + 1, 0xff);\r\n\r\n          const nonPortals = new THREE.Scene();\r\n          nonPortals.children = sceneEl.object3D.children.filter((obj) => !portals.includes(obj));\r\n\r\n          const tmpScene = new THREE.Scene();\r\n          tmpScene.children = sceneEl.object3D.children;\r\n\r\n          //render the rest of the scene, limited to the stencil buffer\r\n          renderer.render(tmpScene, virtualCam);\r\n        } else {\r\n          //recursion\r\n          this.renderRecursivePortals(renderer, virtualCam, recursionLevel + 1);\r\n        }\r\n\r\n        gl.colorMask(false, false, false, false);\r\n        gl.depthMask(false);\r\n        gl.enable(gl.STENCIL_TEST);\r\n        gl.stencilMask(0xff);\r\n        gl.stencilFunc(gl.NOTEQUAL, recursionLevel + 1, 0xff);\r\n        gl.stencilOp(gl.DECR, gl.KEEP, gl.KEEP);\r\n\r\n        //render portal into stencil buffer\r\n        renderer.render(portalScene, camera);\r\n      });\r\n    });\r\n\r\n    gl.disable(gl.STENCIL_TEST);\r\n    gl.stencilMask(0x00);\r\n    gl.colorMask(false, false, false, false);\r\n    gl.enable(gl.DEPTH_TEST);\r\n    gl.depthMask(true);\r\n    gl.depthFunc(gl.ALWAYS);\r\n    renderer.clear(false, true, false);\r\n\r\n    //render portals into depth buffer\r\n    portals.forEach((portal) => {\r\n      const portalScene = new THREE.Scene();\r\n      portalScene.children = portal.children;\r\n      renderer.render(portalScene, camera);\r\n    });\r\n\r\n    gl.depthFunc(gl.LESS);\r\n    gl.enable(gl.STENCIL_TEST);\r\n    gl.stencilMask(0x00);\r\n    gl.stencilFunc(gl.LEQUAL, recursionLevel, 0xff);\r\n    gl.colorMask(true, true, true, true);\r\n    gl.depthMask(true);\r\n\r\n    const nonPortals = new THREE.Scene();\r\n    //nonPortals.children = sceneEl.object3D.children.filter((obj) => !portals.includes(obj));\r\n    nonPortals.children = sceneEl.object3D.children;\r\n\r\n    const tmpScene = new THREE.Scene();\r\n    tmpScene.children = sceneEl.object3D.children;\r\n\r\n    //render the rest of the scene, only at recursionLevel\r\n    renderer.render(tmpScene, camera);\r\n\r\n    camera.matrixAutoUpdate = true;\r\n  },\r\n});\r\n\r\nfunction computeViewMatrix(camera, src, dst) {\r\n  const srcToCam = camera.matrixWorld.clone();\r\n  srcToCam.invert().multiply(src.matrixWorld);\r\n\r\n  const dstInverse = dst.matrixWorld.clone().invert();\r\n  const rotationYMatrix = new THREE.Matrix4().makeRotationY(Math.PI);\r\n  const srcToDst = new THREE.Matrix4().multiply(srcToCam).multiply(rotationYMatrix).multiply(dstInverse);\r\n\r\n  return srcToDst.invert();\r\n}\r\n\r\nfunction computeProjectionMatrix(dst, viewMat, projMat) {\r\n  const cameraInverseViewMat = viewMat.clone().invert();\r\n\r\n  const dstRotationMatrix = new THREE.Matrix4().extractRotation(dst.matrixWorld);\r\n\r\n  const normal = new THREE.Vector3().set(0, 0, 1).applyMatrix4(dstRotationMatrix);\r\n\r\n  const clipPlane = new THREE.Plane();\r\n  clipPlane.setFromNormalAndCoplanarPoint(normal, dst.getWorldPosition(new THREE.Vector3()));\r\n  clipPlane.applyMatrix4(cameraInverseViewMat);\r\n\r\n  const clipVector = new THREE.Vector4();\r\n  clipVector.set(clipPlane.normal.x, clipPlane.normal.y, clipPlane.normal.z, clipPlane.constant);\r\n\r\n  const projectionMatrix = projMat.clone();\r\n\r\n  const q = new THREE.Vector4();\r\n  q.x = (Math.sign(clipVector.x) + projectionMatrix.elements[8]) / projectionMatrix.elements[0];\r\n  q.y = (Math.sign(clipVector.y) + projectionMatrix.elements[9]) / projectionMatrix.elements[5];\r\n  q.z = -1.0;\r\n  q.w = (1.0 + projectionMatrix.elements[10]) / projMat.elements[14];\r\n\r\n  clipVector.multiplyScalar(2 / clipVector.dot(q));\r\n\r\n  projectionMatrix.elements[2] = clipVector.x;\r\n  projectionMatrix.elements[6] = clipVector.y;\r\n  projectionMatrix.elements[10] = clipVector.z + 1.0;\r\n  projectionMatrix.elements[14] = clipVector.w;\r\n\r\n  return projectionMatrix;\r\n}\r\n"],"names":["e","t","i","s","exports","n","id","loaded","call","m","c","p","AFRAME","Error","childList","attributes","subtree","registerComponent","schema","collideNonVisible","default","debug","enabled","interval","objects","init","this","centerDifferenceVec3","THREE","Vector3","clearedIntersectedEls","closestIntersectedEl","boundingBox","Box3","boxCenter","boxHelper","BoxHelper","boxMax","boxMin","hitClosestClearEventDetail","hitClosestEventDetail","intersectedEls","objectEls","newIntersectedEls","prevCheckTime","previousIntersectedEls","setDirty","bind","observer","MutationObserver","dirty","hitStartEventDetail","play","observe","el","sceneEl","addEventListener","remove","disconnect","removeEventListener","tick","r","o","l","h","a","b","d","E","x","data","refreshObjects","setFromObject","object3D","copy","min","max","getCenter","parent","add","length","getAttribute","isIntersecting","push","indexOf","hasAttribute","emit","boundingBoxCenter","sub","Color","Math","random","y","z","querySelectorAll","children","destSelector","width","height","maxRecursion","setAttribute","geometry","BoxBufferGeometry","material","MeshBasicMaterial","colorWrite","mesh","Mesh","computeBoundingSphere","frustumCulled","matrixAutoUpdate","renderOrder","visible","cameraEl","camera","portals","portalPairs","onAfterRender","renderer","scene","_this","renderRecursivePortals","pairs","dest","document","querySelector","isInPairs","forEach","pair","portal","recursionLevel","gl","getContext","autoClear","destPortal","portalScene","Scene","colorMask","depthMask","disable","DEPTH_TEST","enable","STENCIL_TEST","stencilFunc","NOTEQUAL","stencilOp","INCR","KEEP","stencilMask","render","virtualCam","PerspectiveCamera","matrixWorld","src","dst","srcToCam","clone","invert","multiply","dstInverse","rotationYMatrix","Matrix4","makeRotationY","PI","computeViewMatrix","projectionMatrix","viewMat","projMat","cameraInverseViewMat","dstRotationMatrix","extractRotation","normal","set","applyMatrix4","clipPlane","Plane","setFromNormalAndCoplanarPoint","getWorldPosition","clipVector","Vector4","constant","q","sign","elements","w","multiplyScalar","dot","computeProjectionMatrix","_this2","clear","EQUAL","filter","obj","includes","tmpScene","DECR","depthFunc","ALWAYS","LESS","LEQUAL"],"mappings":"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"}