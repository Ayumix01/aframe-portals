!function(e){function t(s){if(i[s])return i[s].exports;var n=i[s]={exports:{},id:s,loaded:!1};return e[s].call(n.exports,n,n.exports,t),n.loaded=!0,n.exports}var i={};t.m=e,t.c=i,t.p="",t(0)}([function(e,t){if("undefined"==typeof AFRAME)throw new Error("Component attempted to register before AFRAME was available.");var i={childList:!0,attributes:!0,subtree:!0};AFRAME.registerComponent("aabb-collider",{schema:{collideNonVisible:{default:!1},debug:{default:!1},enabled:{default:!0},interval:{default:80},objects:{default:""}},init:function(){this.centerDifferenceVec3=new THREE.Vector3,this.clearedIntersectedEls=[],this.closestIntersectedEl=null,this.boundingBox=new THREE.Box3,this.boxCenter=new THREE.Vector3,this.boxHelper=new THREE.BoxHelper,this.boxMax=new THREE.Vector3,this.boxMin=new THREE.Vector3,this.hitClosestClearEventDetail={},this.hitClosestEventDetail={},this.intersectedEls=[],this.objectEls=[],this.newIntersectedEls=[],this.prevCheckTime=void 0,this.previousIntersectedEls=[],this.setDirty=this.setDirty.bind(this),this.observer=new MutationObserver(this.setDirty),this.dirty=!0,this.hitStartEventDetail={intersectedEls:this.newIntersectedEls}},play:function(){this.observer.observe(this.el.sceneEl,i),this.el.sceneEl.addEventListener("object3dset",this.setDirty),this.el.sceneEl.addEventListener("object3dremove",this.setDirty)},remove:function(){this.observer.disconnect(),this.el.sceneEl.removeEventListener("object3dset",this.setDirty),this.el.sceneEl.removeEventListener("object3dremove",this.setDirty)},tick:function(e){var t,i,s,n,r=this.boundingBox,o=this.centerDifferenceVec3,l=this.clearedIntersectedEls,c=this.intersectedEls,a=this.el,h=this.newIntersectedEls,d=this.objectEls,E=this.prevCheckTime,b=this.previousIntersectedEls;if(this.data.enabled&&!(E&&e-E<this.data.interval)){for(this.prevCheckTime=e,this.dirty&&this.refreshObjects(),r.setFromObject(a.object3D),this.boxMin.copy(r.min),this.boxMax.copy(r.max),r.getCenter(this.boxCenter),this.data.debug&&(this.boxHelper.setFromObject(a.object3D),this.boxHelper.parent||a.sceneEl.object3D.add(this.boxHelper)),function(e,t){var i;for(e.length=0,i=0;i<t.length;i++)e[i]=t[i]}(b,c),c.length=0,n=0;n<d.length;n++)d[n]!==this.el&&(this.data.collideNonVisible||d[n].getAttribute("visible")?this.isIntersecting(d[n])&&c.push(d[n]):this.data.debug&&(t=d[n].object3D.boxHelper)&&(a.sceneEl.object3D.remove(t),d[n].object3D.boxHelper=null));for(h.length=0,n=0;n<c.length;n++)-1===b.indexOf(c[n])&&h.push(c[n]);for(l.length=0,n=0;n<b.length;n++)-1===c.indexOf(b[n])&&(b[n].hasAttribute("aabb-collider")||b[n].emit("hitend"),l.push(b[n]));for(n=0;n<h.length;n++)h[n]!==this.el&&(h[n].hasAttribute("aabb-collider")||h[n].emit("hitstart"));for(n=0;n<c.length;n++)c[n]!==this.el&&(o.copy(c[n].object3D.boundingBoxCenter).sub(this.boxCenter),(void 0===i||o.length()<i)&&(i=o.length(),s=c[n]));!c.length&&this.closestIntersectedEl?(this.hitClosestClearEventDetail.el=this.closestIntersectedEl,this.closestIntersectedEl.emit("hitclosestclear"),this.closestIntersectedEl=null,a.emit("hitclosestclear",this.hitClosestClearEventDetail)):s!==this.closestIntersectedEl&&(this.closestIntersectedEl&&(this.hitClosestClearEventDetail.el=this.closestIntersectedEl,this.closestIntersectedEl.emit("hitclosestclear",this.hitClosestClearEventDetail)),s&&(s.emit("hitclosest"),this.closestIntersectedEl=s,this.hitClosestEventDetail.el=s,a.emit("hitclosest",this.hitClosestEventDetail))),l.length&&a.emit("hitend"),h.length&&a.emit("hitstart",this.hitStartEventDetail)}},isIntersecting:function(){var e=new THREE.Box3;return function(t){var i,s;return e.setFromObject(t.object3D),this.data.debug&&(t.object3D.boxHelper||(t.object3D.boxHelper=new THREE.BoxHelper(t.object3D,new THREE.Color(Math.random(),Math.random(),Math.random())),t.sceneEl.object3D.add(t.object3D.boxHelper)),t.object3D.boxHelper.setFromObject(t.object3D)),i=e.min,s=e.max,t.object3D.boundingBoxCenter=t.object3D.boundingBoxCenter||new THREE.Vector3,e.getCenter(t.object3D.boundingBoxCenter),this.boxMin.x<=s.x&&this.boxMax.x>=i.x&&this.boxMin.y<=s.y&&this.boxMax.y>=i.y&&this.boxMin.z<=s.z&&this.boxMax.z>=i.z}}(),setDirty:function(){this.dirty=!0},refreshObjects:function(){var e=this.data;this.objectEls=e.objects?this.el.sceneEl.querySelectorAll(e.objects):this.el.sceneEl.children,this.dirty=!1}})}]),AFRAME.registerComponent("portal",{schema:{destSelector:{default:""},width:{default:2},height:{default:3},maxRecursion:{default:2}},init:function(){var e=this,t=this.el,i=t.sceneEl,s=this.data;t.setAttribute("visible",!1);var n=new THREE.BoxBufferGeometry(s.width,s.height,.01),r=new THREE.MeshBasicMaterial({colorWrite:!1}),o=new THREE.Mesh(n,r);o.geometry.computeBoundingSphere(),o.frustumCulled=!0,o.matrixAutoUpdate=!1,o.renderOrder=2,o.visible=!0,t.object3D.add(o),i.addEventListener("loaded",function(){var e=i.camera.el;e.id||(e.id="web-portal-cam-tag"),t.setAttribute("aabb-collider",{objects:"#"+e.id})}),t.addEventListener("hitstart",function(){}),i.portals||(i.portals=[],i.portalPairs=[],i.object3D.onAfterRender=function(t,i,s){e.renderRecursivePortals(t,s)});var l=i.portalPairs;i.portals.push(t.object3D);var c=document.querySelector(s.destSelector);if(c){var a=!1;l.forEach(function(e){e.forEach(function(e){e==t.object3D&&(a=!0)})}),0==a&&l.push([t.object3D,c.object3D])}},tick:function(){},renderRecursivePortals:function(e,t,i){var s=this;void 0===i&&(i=0);var n=this.el.sceneEl,r=n.portals,o=n.portalPairs,l=e.getContext();e.autoClear=!1,t.matrixAutoUpdate=!1,o.forEach(function(o){o.forEach(function(c,a){var h=o[1-a],d=new THREE.Scene;d.children=c.children,l.colorMask(!1,!1,!1,!1),l.depthMask(!1),l.disable(l.DEPTH_TEST),l.enable(l.STENCIL_TEST),l.stencilFunc(l.NOTEQUAL,i,255),l.stencilOp(l.INCR,l.KEEP,l.KEEP),l.stencilMask(255),e.render(d,t);var E=(new THREE.PerspectiveCamera).copy(t);if(E.matrixWorld=function(e,t,i){var s=e.matrixWorld.clone();s.invert().multiply(t.matrixWorld);var n=i.matrixWorld.clone().invert(),r=(new THREE.Matrix4).makeRotationY(Math.PI);return(new THREE.Matrix4).multiply(s).multiply(r).multiply(n).invert()}(t,c,h),E.projectionMatrix=function(e,t,i){var s=t.clone().invert(),n=(new THREE.Matrix4).extractRotation(e.matrixWorld),r=(new THREE.Vector3).set(0,0,1).applyMatrix4(n),o=new THREE.Plane;o.setFromNormalAndCoplanarPoint(r,e.getWorldPosition(new THREE.Vector3)),o.applyMatrix4(s);var l=new THREE.Vector4;l.set(o.normal.x,o.normal.y,o.normal.z,o.constant);var c=i.clone(),a=new THREE.Vector4;return a.x=(Math.sign(l.x)+c.elements[8])/c.elements[0],a.y=(Math.sign(l.y)+c.elements[9])/c.elements[5],a.z=-1,a.w=(1+c.elements[10])/i.elements[14],l.multiplyScalar(2/l.dot(a)),c.elements[2]=l.x,c.elements[6]=l.y,c.elements[10]=l.z+1,c.elements[14]=l.w,c}(h,E.matrixWorld,E.projectionMatrix),i==s.data.maxRecursion){l.colorMask(!0,!0,!0,!0),l.depthMask(!0),e.clear(!1,!0,!1),l.enable(l.DEPTH_TEST),l.enable(l.STENCIL_TEST),l.stencilMask(0),l.stencilFunc(l.EQUAL,i+1,255),(new THREE.Scene).children=n.object3D.children.filter(function(e){return!r.includes(e)});var b=new THREE.Scene;b.children=n.object3D.children,e.render(b,E)}else s.renderRecursivePortals(e,E,i+1);l.colorMask(!1,!1,!1,!1),l.depthMask(!1),l.enable(l.STENCIL_TEST),l.stencilMask(255),l.stencilFunc(l.NOTEQUAL,i+1,255),l.stencilOp(l.DECR,l.KEEP,l.KEEP),e.render(d,t)})}),l.disable(l.STENCIL_TEST),l.stencilMask(0),l.colorMask(!1,!1,!1,!1),l.enable(l.DEPTH_TEST),l.depthMask(!0),l.depthFunc(l.ALWAYS),e.clear(!1,!0,!1),r.forEach(function(i){var s=new THREE.Scene;s.children=i.children,e.render(s,t)}),l.depthFunc(l.LESS),l.enable(l.STENCIL_TEST),l.stencilMask(0),l.stencilFunc(l.LEQUAL,i,255),l.colorMask(!0,!0,!0,!0),l.depthMask(!0),(new THREE.Scene).children=n.object3D.children;var c=new THREE.Scene;c.children=n.object3D.children,e.render(c,t),t.matrixAutoUpdate=!0}});
//# sourceMappingURL=aframe-portals.js.map
